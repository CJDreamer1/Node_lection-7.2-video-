{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "University",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of university app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Students",
      "description": "Operations about students."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/students/{id}": {
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get student by id",
        "operationId": "getStudent",
        "description": "Get student by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "669aa4f1e5798ece9e9558ca"
          }
        ],
        "responses": {
          "200": {
            "description": "Get student by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Succesfully found student with id 669aa4f1e5798ece9e9558ca"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/student"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Student with id 669aa4f1e5798ece9e9558ca not found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/students": {
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Create student",
        "operationId": "CreateStudent",
        "description": "Create a student",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "year",
                  "gender",
                  "email"
                ],
                "properties": {
                  "name": {
                    "description": "Student`s name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "gender": {
                    "description": "Student`s gender",
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ],
                    "example": "male"
                  },
                  "email": {
                    "description": "Student`s email",
                    "type": "string",
                    "example": "john.doe@gmail.com"
                  },
                  "year": {
                    "description": "Student`s year of birth",
                    "type": "number",
                    "example": 2000
                  },
                  "onDuty": {
                    "description": "Whether the student is on duty",
                    "type": "boolean",
                    "example": false,
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a student",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a student"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/student"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "student": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "gender",
          "email",
          "year",
          "onDuty",
          "paretId"
        ],
        "properties": {
          "_id": {
            "description": "Student`s id",
            "type": "string",
            "example": "669aa4f1e5798ece9e9558ca"
          },
          "name": {
            "description": "Student`s name",
            "type": "string",
            "example": "John Doe"
          },
          "gender": {
            "description": "Student`s gender",
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "male"
          },
          "email": {
            "description": "Student`s email",
            "type": "string",
            "example": "jonhdoe@gmail.com"
          },
          "year": {
            "description": "Student`s year of birth",
            "type": "number",
            "example": 2000
          },
          "onDuty": {
            "description": "Whether is student on duty",
            "type": "boolean",
            "example": false,
            "default": false
          },
          "paretId": {
            "description": "Parent`s id",
            "type": "string",
            "example": "66aa233aebcc784f3bb1d334"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unathorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}